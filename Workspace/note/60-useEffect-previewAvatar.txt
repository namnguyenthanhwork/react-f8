import { useEffect, useState } from "react";
/*  
    I. Update DOM (title)
    II. Call API
    III. Listen DOM events
      - Scroll
      - Resize
    IV. Cleanup
      - Remove listener/ Unsubcribe (Observer pattern)
      - Clear timer (setInterval, setTimeout, clearInterval, clearTimeout)
    1. useEffect(callback)
      - gọi callback mỗi khi component re-render
      - gọi callback sau khi component thêm element vào dom
    2. useEffect(callback, [])
      - chỉ gọi callback 1 lần sau khi component mounted
    3. useEffect(callback, [dependences])
      - callback được gọi lại sau khi dependences thay đổi
----------------------------------------------------------------
note bên dưới được áp dụng cho cả mục 1 2 3 ở bên trên
    - 1. callback luôn luôn được gọi sau khi compoment mounted
    - 2. cleanup function luôn được gọi trước khi component unmounted
    - 3. cleanup function luôn được gọi trước khi callback được gọi (trừ lần mounted đầu tiên)
*/

function Content() {
  const [avatar, setAvatar] = useState();

  useEffect(() => {
    return () => {
      avatar && URL.revokeObjectURL(avatar.preview);
    };
  }, [avatar]);
  const handlePreviewAvatar = (e) => {
    const file = e.target.files[0];
    file.preview = URL.createObjectURL(file);
    setAvatar(file);
  };
  return (
    <div>
      <input type="file" onChange={handlePreviewAvatar} />
      {avatar && <img src={avatar.preview} alt="" width="150" height="150" />}
    </div>
  );
}

export default Content;
